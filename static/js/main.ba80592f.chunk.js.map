{"version":3,"sources":["components/AstronomyPictureOfTheDay.js","components/PictutesOfPreviousDays.js","App.js","reportWebVitals.js","index.js"],"names":["AstronomyPictureOfTheDay","choosenApodData","className","media_type","src","url","alt","title","height","frameBorder","copyright","date","explanation","PicturesOfPreviousDays","apodDatas","setChoosenApodData","filter","data","map","onClick","window","scrollTo","App","useState","Date","toISOString","slice","inputDate","setInputDate","setApodDatas","useEffect","endDate","endDateValidation","startDate","transformToDate","setDate","getDate","startDateGeneration","fetch","then","res","json","console","log","length","catch","err","type","onInput","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAsBeA,MApBf,YAAwD,IAApBC,EAAmB,EAAnBA,gBAClC,OACE,sBAAKC,UAAU,YAAf,UACGD,GAAkD,UAA/BA,EAAgBE,WAClC,qBAAKD,UAAU,kBAAf,SACE,qBAAKE,IAAKH,EAAgBI,IAAKC,IAAKL,EAAgBM,UAGtD,wBAAQH,IAAKH,EAAgBI,IAAKE,MAAON,EAAgBM,MAAOC,OAAO,MAAMC,YAAY,MAG3F,6BAAKR,EAAgBM,SACL,OAAfN,QAAe,IAAfA,OAAA,EAAAA,EAAiBS,WAAY,2CAAcT,EAAgBS,aAAiB,GAC7E,4BAAIT,EAAgBU,OAEpB,kCAAUV,EAAgBW,kBCSjBC,MAxBf,YAAqF,IAAnDC,EAAkD,EAAlDA,UAAWb,EAAuC,EAAvCA,gBAAiBc,EAAsB,EAAtBA,mBAC5D,OACE,sBAAKb,UAAU,iBAAf,UACE,+CACA,qBAAKA,UAAU,UAAf,SACGY,GACCA,EACGE,QAAO,SAACC,GAAD,OAAUA,EAAKZ,MAAQJ,EAAgBI,OAC9Ca,KAAI,SAACD,GAAD,OACH,qBAEEb,IAAKa,EAAKZ,IACVC,IAAKW,EAAKV,MACVY,QAAS,WACPJ,EAAmBE,GACnBG,OAAOC,SAAS,EAAG,KALhBJ,EAAKZ,c,MCoCXiB,MA3Cf,WACE,IACA,EAAkCC,oBAAS,IAAIC,MAAOC,cAAcC,MAAM,EAAG,KAA7E,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CL,mBAAS,IAAvD,mBAAOtB,EAAP,KAAwBc,EAAxB,KACA,EAAkCQ,mBAAS,MAA3C,mBAAOT,EAAP,KAAkBe,EAAlB,KAyBA,OAbAC,qBAAU,WACR,IAAIC,EAXN,SAA2BJ,GACzB,OAAOA,EAAY,aAAe,aAAeA,EAUnCK,CAAkBL,GAC5BM,EARN,SAA6BtB,GAC3B,IAAIuB,EAAkB,IAAIV,KAAKb,GAE/B,OADAuB,EAAgBC,QAAQD,EAAgBE,UAAY,GAC7CF,EAAgBT,cAAcC,MAAM,EAAG,IAK9BW,CAAoBN,GACpCO,MAAM,+CAAD,OAlBK,2CAkBL,uBAAkEL,EAAlE,qBAAwFF,IAC1FQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACtB,GACLyB,QAAQC,IAAIZ,EAASE,EAAWhB,GAChCF,EAAmBE,EAAKA,EAAK2B,OAAS,IACtCf,EAAaZ,MAEd4B,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAI,gBAAiBG,QAC9C,CAACnB,IAGF,gCACE,sBAAKzB,UAAU,iBAAf,UACE,8DACA,uBAAO6C,KAAK,OAAOC,QAAS,SAACC,GAAD,OAAOrB,EAAaqB,EAAEC,OAAOC,UACxDxB,EAAY,aAAe,yDAAkC,GAE9D,cAAC,EAAD,CAA0B1B,gBAAiBA,OAE7C,cAAC,EAAD,CAAwBa,UAAWA,EAAWb,gBAAiBA,EAAiBc,mBAAoBA,QC/B3FqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ba80592f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AstronomyPictureOfTheDay({ choosenApodData }) {\r\n  return (\r\n    <div className=\"astronomy\">\r\n      {choosenApodData && choosenApodData.media_type === \"image\" ? (\r\n        <div className=\"image-container\">\r\n          <img src={choosenApodData.url} alt={choosenApodData.title} />\r\n        </div>\r\n      ) : (\r\n        <iframe src={choosenApodData.url} title={choosenApodData.title} height=\"60%\" frameBorder=\"0\"></iframe>\r\n      )}\r\n\r\n      <h2>{choosenApodData.title}</h2>\r\n      {choosenApodData?.copyright ? <p>Photo by: {choosenApodData.copyright}</p> : \"\"}\r\n      <p>{choosenApodData.date}</p>\r\n\r\n      <article>{choosenApodData.explanation}</article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AstronomyPictureOfTheDay;\r\n","import React from \"react\";\r\n\r\nfunction PicturesOfPreviousDays({ apodDatas, choosenApodData, setChoosenApodData }) {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <h2>Previous Days</h2>\r\n      <div className=\"gallery\">\r\n        {apodDatas &&\r\n          apodDatas\r\n            .filter((data) => data.url !== choosenApodData.url)\r\n            .map((data) => (\r\n              <img\r\n                key={data.url}\r\n                src={data.url}\r\n                alt={data.title}\r\n                onClick={() => {\r\n                  setChoosenApodData(data);\r\n                  window.scrollTo(0, 0);\r\n                }}\r\n              />\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PicturesOfPreviousDays;\r\n","import React, { useState, useEffect } from \"react\";\nimport AstronomyPictureOfTheDay from \"./components/AstronomyPictureOfTheDay\";\nimport PicturesOfPreviousDays from \"./components/PictutesOfPreviousDays\";\nimport \"./App.css\";\n\nfunction App() {\n  const key = \"eScw6dlpwJ2AIBuldX1hVZD5Bl1TcnLm9GfqgRwx\";\n  const [inputDate, setInputDate] = useState(new Date().toISOString().slice(0, 10));\n  const [choosenApodData, setChoosenApodData] = useState({});\n  const [apodDatas, setApodDatas] = useState(null);\n\n  function endDateValidation(inputDate) {\n    return inputDate < \"1995-06-22\" ? \"1995-06-22\" : inputDate;\n  }\n\n  function startDateGeneration(date) {\n    let transformToDate = new Date(date);\n    transformToDate.setDate(transformToDate.getDate() - 6);\n    return transformToDate.toISOString().slice(0, 10);\n  }\n\n  useEffect(() => {\n    let endDate = endDateValidation(inputDate);\n    let startDate = startDateGeneration(endDate);\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${key}&start_date=${startDate}&end_date=${endDate}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(endDate, startDate, data);\n        setChoosenApodData(data[data.length - 1]);\n        setApodDatas(data);\n      })\n      .catch((err) => console.log(\"Fetch error: \", err));\n  }, [inputDate]);\n\n  return (\n    <div>\n      <div className=\"main-container\">\n        <h1>Astronomy Picture of the Day</h1>\n        <input type=\"date\" onInput={(e) => setInputDate(e.target.value)} />\n        {inputDate < \"1995-06-22\" ? <p>Must be after 1995-06-21</p> : \"\"}\n\n        <AstronomyPictureOfTheDay choosenApodData={choosenApodData} />\n      </div>\n      <PicturesOfPreviousDays apodDatas={apodDatas} choosenApodData={choosenApodData} setChoosenApodData={setChoosenApodData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}